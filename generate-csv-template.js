#!/usr/bin/env node

/**
 * üìù Generador de plantillas CSV para importaci√≥n
 * 
 * Este script genera archivos CSV de ejemplo para importar usuarios
 * 
 * Uso: node generate-csv-template.js [cantidad]
 */

const fs = require('fs');
const path = require('path');

// Datos de ejemplo
const nombres = [
  'Ana Garc√≠a', 'Carlos L√≥pez', 'Mar√≠a Rodr√≠guez', 'Jos√© Mart√≠nez',
  'Laura Fern√°ndez', 'Diego Gonz√°lez', 'Sofia P√©rez', 'Miguel S√°nchez',
  'Elena D√≠az', 'Pablo Morales', 'Carmen Ruiz', 'Andr√©s Torres',
  'Luc√≠a Vargas', 'Fernando Castro', 'Isabel Ortega', 'Roberto Silva'
];

const dominios = [
  '@ipdvs.edu.ar', '@campus.edu.ar', '@estudiante.edu.ar', '@profesor.edu.ar'
];

/**
 * Genera un email basado en el nombre
 */
function generarEmail(nombre) {
  const nombreLimpio = nombre
    .toLowerCase()
    .replace(/\s+/g, '.')
    .replace(/[√°√†√§]/g, 'a')
    .replace(/[√©√®√´]/g, 'e')
    .replace(/[√≠√¨√Ø]/g, 'i')
    .replace(/[√≥√≤√∂]/g, 'o')
    .replace(/[√∫√π√º]/g, 'u')
    .replace(/√±/g, 'n');
  
  const dominio = dominios[Math.floor(Math.random() * dominios.length)];
  return nombreLimpio + dominio;
}

/**
 * Genera usuarios de ejemplo
 */
function generarUsuarios(cantidad = 10) {
  const usuarios = [];
  const roles = ['student', 'teacher', 'admin'];
  const probabilidadRol = { student: 0.7, teacher: 0.25, admin: 0.05 };
  
  for (let i = 0; i < cantidad; i++) {
    const nombre = nombres[i % nombres.length];
    const email = generarEmail(nombre);
    
    // Seleccionar rol basado en probabilidades
    let rol = 'student';
    const rand = Math.random();
    if (rand < probabilidadRol.admin) {
      rol = 'admin';
    } else if (rand < probabilidadRol.admin + probabilidadRol.teacher) {
      rol = 'teacher';
    }
    
    // Generar a√±o solo para estudiantes
    const a√±o = rol === 'student' ? Math.floor(Math.random() * 5) + 1 : '';
    
    // Estado activo (90% activos)
    const activo = Math.random() > 0.1 ? 'true' : 'false';
    
    usuarios.push({
      nombre,
      email,
      rol,
      a√±o,
      activo
    });
  }
  
  return usuarios;
}

/**
 * Convierte usuarios a CSV
 */
function usuariosACSV(usuarios) {
  const headers = 'nombre,email,rol,a√±o,activo';
  const filas = usuarios.map(user => 
    `"${user.nombre}","${user.email}","${user.rol}","${user.a√±o}","${user.activo}"`
  );
  
  return [headers, ...filas].join('\n');
}

/**
 * Genera archivo de plantilla vac√≠a
 */
function generarPlantillaVacia() {
  return `nombre,email,rol,a√±o,activo
"Ejemplo Nombre","ejemplo@ipdvs.edu.ar","student","1","true"
"Profesor Ejemplo","profesor@ipdvs.edu.ar","teacher","","true"
"Admin Ejemplo","admin@ipdvs.edu.ar","admin","","true"`;
}

/**
 * Funci√≥n principal
 */
function main() {
  const cantidad = parseInt(process.argv[2]) || 10;
  
  console.log('üìù Generando plantillas CSV para importaci√≥n...\n');
  
  try {
    // Crear directorio de plantillas si no existe
    const templatesDir = path.join(__dirname, 'csv-templates');
    if (!fs.existsSync(templatesDir)) {
      fs.mkdirSync(templatesDir);
    }
    
    // 1. Plantilla vac√≠a
    const plantillaVacia = generarPlantillaVacia();
    const rutaPlantilla = path.join(templatesDir, 'plantilla_usuarios.csv');
    fs.writeFileSync(rutaPlantilla, plantillaVacia, 'utf8');
    console.log(`‚úÖ Plantilla vac√≠a creada: ${rutaPlantilla}`);
    
    // 2. Ejemplo con datos
    const usuariosEjemplo = generarUsuarios(cantidad);
    const csvEjemplo = usuariosACSV(usuariosEjemplo);
    const rutaEjemplo = path.join(templatesDir, `ejemplo_usuarios_${cantidad}.csv`);
    fs.writeFileSync(rutaEjemplo, csvEjemplo, 'utf8');
    console.log(`‚úÖ Ejemplo con ${cantidad} usuarios creado: ${rutaEjemplo}`);
    
    // 3. Estad√≠sticas
    const stats = usuariosEjemplo.reduce((acc, user) => {
      acc[user.rol] = (acc[user.rol] || 0) + 1;
      return acc;
    }, {});
    
    console.log('\nüìä Estad√≠sticas del archivo de ejemplo:');
    Object.entries(stats).forEach(([rol, count]) => {
      console.log(`   ${rol}: ${count} usuarios`);
    });
    
    console.log('\nüí° Instrucciones de uso:');
    console.log('1. Usa plantilla_usuarios.csv como base para tus propios datos');
    console.log('2. Usa ejemplo_usuarios_X.csv para pruebas de importaci√≥n');
    console.log('3. Aseg√∫rate de que los emails sean √∫nicos');
    console.log('4. Los roles v√°lidos son: admin, teacher, student');
    console.log('5. El a√±o es opcional y solo aplica para estudiantes');
    console.log('6. El campo activo acepta: true/false, 1/0, si/no');
    
  } catch (error) {
    console.error('‚ùå Error generando plantillas:', error);
    process.exit(1);
  }
}

// Ejecutar si es llamado directamente
if (require.main === module) {
  main();
}

module.exports = {
  generarUsuarios,
  usuariosACSV,
  generarPlantillaVacia
};
